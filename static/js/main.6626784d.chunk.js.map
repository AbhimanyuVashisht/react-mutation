{"version":3,"sources":["Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","state","breakTime","this","intervalID","setInterval","tick","clearInterval","t","Date","toLocaleString","date","split","trim","time","d1","d2","d3","t1","t2","t3","setState","className","id","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEqBA,E,kDACpB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,EAAKC,YAFD,E,gEAIE,IAAD,OAClBC,KAAKC,WAAaC,aACnB,kBAAM,EAAKC,SACX,O,6CAICC,cAAcJ,KAAKC,c,kCAGpB,IAAII,GAAI,IAAIC,MAAOC,iBACfC,EAAOH,EAAEI,MAAM,KAAK,GAAGC,OACvBC,EAAON,EAAEI,MAAM,KAAK,GAAGC,OAW3B,MAAO,CACNF,KAXO,CACPI,GAAIJ,EAAKC,MAAM,KAAK,GACpBI,GAAIL,EAAKC,MAAM,KAAK,GACpBK,GAAIN,EAAKC,MAAM,KAAK,IASpBE,KAPO,CACPI,GAAIJ,EAAKF,MAAM,KAAK,GACpBO,GAAIL,EAAKF,MAAM,KAAK,GACpBQ,GAAIN,EAAKF,MAAM,KAAK,O,6BAQpBT,KAAKkB,SAASlB,KAAKD,e,+BAGnB,OACD,sBAAKoB,UAAU,YAAf,UACC,sBAAKC,GAAG,aAAR,UACC,4BAAIpB,KAAKF,MAAMU,KAAKI,KACpB,+BAAOZ,KAAKF,MAAMU,KAAKK,KACvB,+BAAOb,KAAKF,MAAMU,KAAKM,QAExB,sBAAKM,GAAG,aAAR,UACC,8BAAMpB,KAAKF,MAAMa,KAAKI,KACtB,+BAAOf,KAAKF,MAAMa,KAAKK,KACvB,+BAAOhB,KAAKF,MAAMa,KAAKM,e,GA/CQI,IAAMC,WCY1BC,MAVf,WACE,OACE,8BACD,8BACC,cAAC,EAAD,SCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6626784d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Timer extends React.Component {\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = this.breakTime();\n\t}\n\tcomponentDidMount() {\n\t  this.intervalID = setInterval(\n\t\t() => this.tick(),\n\t\t1000\n\t  );\n\t}\n\tcomponentWillUnmount() {\n\t  clearInterval(this.intervalID);\n\t}\n\tbreakTime() {\n\t\tlet t = new Date().toLocaleString();\n\t\tlet date = t.split(',')[0].trim();\n\t\tlet time = t.split(',')[1].trim();\n\t\tlet x = {\n\t\t\td1: date.split('/')[0],\n\t\t\td2: date.split('/')[1],\n\t\t\td3: date.split('/')[2],\n\t\t};\n\t\tlet y = {\n\t\t\tt1: time.split(':')[0],\n\t\t\tt2: time.split(':')[1],\n\t\t\tt3: time.split(':')[2],\t\n\t\t}\n\t\treturn {\n\t\t\tdate: x,\n\t\t\ttime: y\n\t\t}\n\t} \n\ttick() {\n\t  this.setState(this.breakTime());\n\t}\n\trender() {\n\t  return (\n\t\t<div className=\"App-clock\">\n\t\t\t<div id=\"date-block\">\n\t\t\t\t<p>{this.state.date.d1}</p>\n\t\t\t\t<span>{this.state.date.d2}</span>\n\t\t\t\t<span>{this.state.date.d3}</span>\n\t\t\t</div>\n\t\t\t<div id=\"time-block\">\n\t\t\t\t<div>{this.state.time.t1}</div>\n\t\t\t\t<span>{this.state.time.t2}</span>\n\t\t\t\t<span>{this.state.time.t3}</span>\n\t\t\t</div>\n\t\t</div>\n\t  );\n\t}\n  };","// import logo from './logo.svg';\nimport './App.css';\nimport Timer from './Timer';\n\nfunction App() {\n  return (\n    <div>\n\t  <div>\n\t\t  <Timer></Timer>\n\t  </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}